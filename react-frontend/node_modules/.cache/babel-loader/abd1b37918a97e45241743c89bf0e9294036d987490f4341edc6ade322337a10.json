{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shaafi\\\\Desktop\\\\shafinder\\\\projects\\\\microsoft-hackathon\\\\ai-agents-hackathon\\\\react-frontend\\\\src\\\\pages\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// src/pages/Chatbot.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Container, Box, Typography, TextField, Button, Paper, List, ListItem, Avatar, CircularProgress } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport PersonIcon from '@mui/icons-material/Person';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [systemPrompt, setSystemPrompt] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const endRef = useRef(null);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    var _endRef$current;\n    (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // On mount: fetch context & build system prompt + greeting\n  useEffect(() => {\n    const initChat = async () => {\n      try {\n        // 1) Fetch completed + all courses\n        const [{\n          data: completed\n        }, {\n          data: courseAll\n        }] = await Promise.all([axios.get('http://127.0.0.1:8000/courses_completed'), axios.get('http://127.0.0.1:8000/course_list')]);\n\n        // 2) Load user prefs (swap to API call if you expose one)\n        const stored = localStorage.getItem('userPreferences');\n        const user = stored ? JSON.parse(stored) : {};\n        const {\n          name = '',\n          major = '',\n          minor = '',\n          specialization = '',\n          interests = 'general academic fields',\n          year = '',\n          core_courses = 0,\n          elective_courses = 0,\n          coop_completed = 0,\n          coop_planned = 0\n        } = user;\n\n        // 3) Mirror your Streamlit system_prompt logic\n        let sp = `You are a kind and helpful UVic course planning assistant expert. If you need additional information, ask before recommending.\\n`;\n        sp += major ? `They have a major in ${major}.\\n` : `They have an unspecified major.\\n`;\n        sp += minor ? `They have a minor in ${minor}.\\n` : `They do not have a minor.\\n`;\n        sp += specialization ? `They have a specialization in ${specialization}.\\n` : `They have no specialization.\\n`;\n        sp += `Their academic interests include ${interests}.\\n`;\n        sp += `Courses completed by the user are ${completed.join(', ')}.\\n`;\n        sp += `Course list of the user's major is ${courseAll.join(', ')}.\\n`;\n        sp += `They are currently in their ${year} year of study.\\n`;\n        sp += `They want to take ${core_courses} core course${core_courses !== 1 ? 's' : ''} and ${elective_courses} elective course${elective_courses !== 1 ? 's' : ''}.\\n`;\n        sp += `The student has completed ${coop_completed} co-op term${coop_completed !== 1 ? 's' : ''} and plans to complete ${coop_planned}.\\n`;\n        sp += 'Always ensure prerequisites are met, workloads are balanced, and their interests are supported.\\n';\n        sp += `Personalize responses by addressing the student by name: ${name}.\\n`;\n        // …add any “Possible questions to ask” line if you had one…\n\n        setSystemPrompt(sp);\n\n        // 4) Seed the conversation\n        const greeting = `Hello${name ? ' ' + name : ''}! I’m your UVic course planning assistant. How can I help you today?`;\n        setMessages([{\n          role: 'system',\n          content: sp\n        }, {\n          role: 'assistant',\n          content: greeting\n        }]);\n      } catch (err) {\n        console.error('Init chat failed', err);\n        setMessages([{\n          role: 'assistant',\n          content: 'Hello! How can I help you plan your courses today?'\n        }]);\n      }\n    };\n    initChat();\n  }, []);\n\n  // Handle user sending a message\n  const handleSend = async () => {\n    const text = input.trim();\n    if (!text) return;\n    // Append user\n    const updated = [...messages, {\n      role: 'user',\n      content: text\n    }];\n    setMessages(updated);\n    setInput('');\n    setLoading(true);\n    try {\n      // POST full history\n      const {\n        data\n      } = await axios.post('http://127.0.0.1:8000/chat', {\n        messages: updated\n      });\n      // Expect { role: 'assistant', content: '…' }\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: data.content\n      }]);\n    } catch (e) {\n      console.error(e);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: '⚠️ Sorry, something went wrong.'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '80vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"UVic Course Planner AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 2,\n          mb: 2,\n          flexGrow: 1,\n          overflow: 'auto',\n          bgcolor: '#f5f5f5'\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: [messages.map((m, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: m.role === 'user' ? 'flex-end' : 'flex-start',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                maxWidth: '80%',\n                bgcolor: m.role === 'user' ? 'primary.light' : 'white',\n                color: m.role === 'user' ? 'white' : 'text.primary',\n                borderRadius: 2,\n                p: 2,\n                boxShadow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                sx: {\n                  mr: 1,\n                  bgcolor: m.role === 'user' ? 'primary.main' : 'secondary.main'\n                },\n                children: m.role === 'user' ? /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(SmartToyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: m.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: endRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          sx: {\n            display: 'block',\n            mx: 'auto',\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your message\\u2026\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && !e.shiftKey && handleSend(),\n          disabled: loading,\n          multiline: true,\n          maxRows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            ml: 1\n          },\n          variant: \"contained\",\n          color: \"primary\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 22\n          }, this),\n          onClick: handleSend,\n          disabled: !input.trim() || loading,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"DeyjlrzwCubliMXRwTJ5cUwDZZA=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Container","Box","Typography","TextField","Button","Paper","List","ListItem","Avatar","CircularProgress","SendIcon","PersonIcon","SmartToyIcon","jsxDEV","_jsxDEV","Chatbot","_s","systemPrompt","setSystemPrompt","messages","setMessages","input","setInput","loading","setLoading","endRef","_endRef$current","current","scrollIntoView","behavior","initChat","data","completed","courseAll","Promise","all","get","stored","localStorage","getItem","user","JSON","parse","name","major","minor","specialization","interests","year","core_courses","elective_courses","coop_completed","coop_planned","sp","join","greeting","role","content","err","console","error","handleSend","text","trim","updated","post","prev","e","maxWidth","children","sx","my","display","flexDirection","height","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","mb","flexGrow","overflow","bgcolor","map","m","i","alignItems","color","borderRadius","boxShadow","mr","ref","mx","fullWidth","placeholder","value","onChange","target","onKeyDown","key","shiftKey","disabled","multiline","maxRows","ml","endIcon","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shaafi/Desktop/shafinder/projects/microsoft-hackathon/ai-agents-hackathon/react-frontend/src/pages/Chatbot.js"],"sourcesContent":["// src/pages/Chatbot.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Paper,\n  List,\n  ListItem,\n  Avatar,\n  CircularProgress,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport PersonIcon from '@mui/icons-material/Person';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\n\nconst Chatbot = () => {\n  const [systemPrompt, setSystemPrompt] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const endRef = useRef(null);\n\n  // Scroll to bottom whenever messages change\n  useEffect(() => {\n    endRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  // On mount: fetch context & build system prompt + greeting\n  useEffect(() => {\n    const initChat = async () => {\n      try {\n        // 1) Fetch completed + all courses\n        const [{ data: completed }, { data: courseAll }] = await Promise.all([\n          axios.get('http://127.0.0.1:8000/courses_completed'),\n          axios.get('http://127.0.0.1:8000/course_list'),\n        ]);\n\n        // 2) Load user prefs (swap to API call if you expose one)\n        const stored = localStorage.getItem('userPreferences');\n        const user = stored ? JSON.parse(stored) : {};\n        const {\n          name = '',\n          major = '',\n          minor = '',\n          specialization = '',\n          interests = 'general academic fields',\n          year = '',\n          core_courses = 0,\n          elective_courses = 0,\n          coop_completed = 0,\n          coop_planned = 0,\n        } = user;\n\n        // 3) Mirror your Streamlit system_prompt logic\n        let sp = `You are a kind and helpful UVic course planning assistant expert. If you need additional information, ask before recommending.\\n`;\n        sp += major\n          ? `They have a major in ${major}.\\n`\n          : `They have an unspecified major.\\n`;\n        sp += minor\n          ? `They have a minor in ${minor}.\\n`\n          : `They do not have a minor.\\n`;\n        sp += specialization\n          ? `They have a specialization in ${specialization}.\\n`\n          : `They have no specialization.\\n`;\n        sp += `Their academic interests include ${interests}.\\n`;\n        sp += `Courses completed by the user are ${completed.join(', ')}.\\n`;\n        sp += `Course list of the user's major is ${courseAll.join(', ')}.\\n`;\n        sp += `They are currently in their ${year} year of study.\\n`;\n        sp += `They want to take ${core_courses} core course${\n          core_courses !== 1 ? 's' : ''\n        } and ${elective_courses} elective course${\n          elective_courses !== 1 ? 's' : ''\n        }.\\n`;\n        sp += `The student has completed ${coop_completed} co-op term${\n          coop_completed !== 1 ? 's' : ''\n        } and plans to complete ${coop_planned}.\\n`;\n        sp +=\n          'Always ensure prerequisites are met, workloads are balanced, and their interests are supported.\\n';\n        sp += `Personalize responses by addressing the student by name: ${name}.\\n`;\n        // …add any “Possible questions to ask” line if you had one…\n\n        setSystemPrompt(sp);\n\n        // 4) Seed the conversation\n        const greeting = `Hello${name ? ' ' + name : ''}! I’m your UVic course planning assistant. How can I help you today?`;\n        setMessages([\n          { role: 'system', content: sp },\n          { role: 'assistant', content: greeting },\n        ]);\n      } catch (err) {\n        console.error('Init chat failed', err);\n        setMessages([\n          {\n            role: 'assistant',\n            content: 'Hello! How can I help you plan your courses today?',\n          },\n        ]);\n      }\n    };\n\n    initChat();\n  }, []);\n\n  // Handle user sending a message\n  const handleSend = async () => {\n    const text = input.trim();\n    if (!text) return;\n    // Append user\n    const updated = [...messages, { role: 'user', content: text }];\n    setMessages(updated);\n    setInput('');\n    setLoading(true);\n\n    try {\n      // POST full history\n      const { data } = await axios.post('http://127.0.0.1:8000/chat', {\n        messages: updated,\n      });\n      // Expect { role: 'assistant', content: '…' }\n      setMessages((prev) => [...prev, { role: 'assistant', content: data.content }]);\n    } catch (e) {\n      console.error(e);\n      setMessages((prev) => [\n        ...prev,\n        { role: 'assistant', content: '⚠️ Sorry, something went wrong.' },\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ my: 4, display: 'flex', flexDirection: 'column', height: '80vh' }}>\n        <Typography variant=\"h4\" gutterBottom>\n          UVic Course Planner AI Assistant\n        </Typography>\n\n        <Paper\n          elevation={3}\n          sx={{ p: 2, mb: 2, flexGrow: 1, overflow: 'auto', bgcolor: '#f5f5f5' }}\n        >\n          <List>\n            {messages.map((m, i) => (\n              <ListItem\n                key={i}\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: m.role === 'user' ? 'flex-end' : 'flex-start',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    display: 'flex',\n                    maxWidth: '80%',\n                    bgcolor: m.role === 'user' ? 'primary.light' : 'white',\n                    color: m.role === 'user' ? 'white' : 'text.primary',\n                    borderRadius: 2,\n                    p: 2,\n                    boxShadow: 1,\n                  }}\n                >\n                  <Avatar\n                    sx={{\n                      mr: 1,\n                      bgcolor: m.role === 'user' ? 'primary.main' : 'secondary.main',\n                    }}\n                  >\n                    {m.role === 'user' ? <PersonIcon /> : <SmartToyIcon />}\n                  </Avatar>\n                  <Typography>{m.content}</Typography>\n                </Box>\n              </ListItem>\n            ))}\n            <div ref={endRef} />\n          </List>\n          {loading && <CircularProgress sx={{ display: 'block', mx: 'auto', my: 2 }} />}\n        </Paper>\n\n        <Box sx={{ display: 'flex' }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Type your message…\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && !e.shiftKey && handleSend()}\n            disabled={loading}\n            multiline\n            maxRows={4}\n          />\n          <Button\n            sx={{ ml: 1 }}\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<SendIcon />}\n            onClick={handleSend}\n            disabled={!input.trim() || loading}\n          >\n            Send\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}